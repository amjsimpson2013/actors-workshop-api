/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Advertisements {
  createdDate: Generated<Timestamp>;
  createdUser: Generated<string>;
  endDate: Timestamp;
  id: Generated<number>;
  image: Buffer;
  linkedId: number | null;
  linkTypeId: number | null;
  name: string;
  priorityId: number;
  startDate: Timestamp;
  summary: string | null;
  updatedDate: Timestamp | null;
  updatedUser: string | null;
}

export interface Events {
  id: Generated<number>;
}

export interface LinkTypes {
  id: number;
  name: string | null;
}

export interface PriorityTypes {
  id: number;
  name: string | null;
}

export interface DB {
  advertisements: Advertisements;
  events: Events;
  linkTypes: LinkTypes;
  priorityTypes: PriorityTypes;
}
